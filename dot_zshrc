# .zshrc
# Author: Joakim Engeset <joakim.engeset@gmail.com>

# Uncomment to start profiling
#zmodload zsh/zprof

### https://github.com/zdharma-continuum/zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit wait lucid light-mode for \
  atinit"zicompinit; zicdreplay" zdharma/fast-syntax-highlighting \
  atload"_zsh_autosuggest_start" zsh-users/zsh-autosuggestions \
  blockf atpull'zinit creinstall -q .' zsh-users/zsh-completions \
  OMZ::lib/completion.zsh \
  OMZ::lib/history.zsh

## theme
zinit ice as"command" from"gh-r" \
          atclone"./starship init zsh > init.zsh; ./starship completions zsh > _starship" \
          atpull"%atclone" src"init.zsh"

zinit light starship/starship

# zinit ice from"gh-r" as"program" atload'!eval $(starship init zsh)'
# zinit light starship/starship

# history stuff
typeset -g HISTSIZE=100000 SAVEHIST=100000

# disable rm * confirmations
setopt rmstarsilent

# enable comments in inline shell commands
setopt interactivecomments

# enable emacs bindings
bindkey -e

# home/end/del support
bindkey -M emacs "${terminfo[khome]}" beginning-of-line # home-key
bindkey -M emacs "${terminfo[kend]}"  end-of-line # end-key
bindkey -M emacs "${terminfo[kdch1]}" delete-char # del-key

# open current command in $EDITOR
autoload -U edit-command-line
zle -N edit-command-line
bindkey '\C-x\C-e' edit-command-line

## env vars
export EDITOR=nvim
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export FZF_DEFAULT_COMMAND='fd --type f --hidden'
export FZF_DEFAULT_OPTS='--height 40% --border'
export MANPAGER='nvim +Man!'
#export RIPGREP_CONFIG_PATH=~/.config/rg/config
export LC_ALL="en_US.utf-8"
export LPASS_AGENT_TIMEOUT=0
export BAT_THEME=base16
export XDG_CONFIG_HOME="$HOME/.config"
# export DOCKER_HOST='unix:///Users/joakle/.local/share/containers/podman/machine/podman-machine-default/podman.sock'
export BUILDAH_FORMAT=docker
export ANSIBLE_CONFIG="$XDG_CONFIG_HOME/ansible/config.cfg"
export AWS_DEFAULT_REGION="eu-west-1"
export CLONE_DIR=~/dev/github.com
export GCP_ORG_ID=69736895940

path=(~/go/bin ~/bin /usr/local/sbin ~/.emacs.d/bin ~/.local/bin/ /opt/homebrew/bin ~/.babashka/bbin/bin $path)

# f2, f3, f4, f5
bindkey -s "\eOQ" "goland-open\n"
bindkey -s "\eOR" "kf edit\n"
bindkey -s "\eOS" "awsvault exec\n"
bindkey -s "\e[15~" "awsvault login\n"

# the python interpreter to use with gcloud cli
# if updated, run $ mise where python@3.12 for the current path
# export CLOUDSDK_PYTHON="~/.local/share/mise/installs/python/3.12.3/bin/python3"

# scripts
#. ~/.fzf.zsh
. ~/.tokens

# aliases
aliasfile=$XDG_CONFIG_HOME/shell/aliasrc
. "$aliasfile"

# lazy load slow kubectl completion
function kubectl() {
    if ! type __start_kubectl >/dev/null 2>&1; then
        source <(command kubectl completion zsh)
    fi
    command kubectl "$@"
}

# Use fd instead of the default find for listing path candidates.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

fzf-switch-branch() {
  zle -I

  git rev-parse --git-dir &> /dev/null || return

  local_branches=$(git for-each-ref --format='%(refname:short)' refs/heads)
  log_pattern="git log -b {} --pretty=format:'%h %d %s'"

  chosen_branch=$(fzf --preview="$log_pattern" -0 <<< "$local_branches")
  [[ $chosen_branch ]] && git switch "$chosen_branch"
}
zle -N fzf-switch-branch
bindkey '^B' fzf-switch-branch

zsh-time-startup() {
  entr time-startup <<< ~/.zshrc
}

project-cd() {
  projects=$(scriv list)
  [[ -z $projects ]] && return
  dir=$(fzf <<< $projects)
  [[ $dir ]] && cd "$dir"
  zle reset-prompt
}
zle -N project-cd
bindkey '^O' project-cd

fzf-cd() {
  dir=$(fd -t d | fzf --preview="ls -1 {}/")
  [[ $dir ]] && cd "$dir"
  zle reset-prompt
}
zle -N fzf-cd
bindkey '^G' fzf-cd

#zprof # Uncomment to stop active profiling

. "$HOME/.atuin/bin/env"

eval "$(mise activate zsh)"
eval "$(atuin init zsh)"
